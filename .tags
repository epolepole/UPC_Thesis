!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
AutosaveI	code_1/include/Iterate.h	/^int  AutosaveI;                         \/\/ autosave i variable, will be incremented after every autosave$/;"	v
AutosaveOutputFile	code_1/include/Iterate.h	/^char AutosaveOutputFile[50];            \/\/ autosave filename$/;"	v
BC_ID	code_1/include/ShellFunctions.h	/^    int    BC_ID[19];$/;"	m	struct:__anon1
BCconn	code_1/include/Iterate.h	/^float **BCconn;         \/\/ matrices for connections$/;"	v
BCells	code_1/include/ShellFunctions.h	/^shared_block(2*LAYER)           CellProps  *BCells; \/\/ Boundary cells$/;"	v
BGKW	code_1/src/CellFunctions.c	/^void BGKW(int i, double Omega)$/;"	f
BLOCKSIZE	code_1/include/BlockSizeDefiner.h	/^#define BLOCKSIZE /;"	d
BLOCKSIZEDEFINER_H	code_1/include/BlockSizeDefiner.h	/^#define BLOCKSIZEDEFINER_H$/;"	d
BOUNDARYCONDITIONS_H	code_1/include/BoundaryConditions.h	/^#define BOUNDARYCONDITIONS_H$/;"	d
Boundary	code_1/include/ShellFunctions.h	/^    int    Boundary;$/;"	m	struct:__anon1
BoundaryID	code_1/include/ShellFunctions.h	/^    int    BoundaryID;$/;"	m	struct:__anon1
CELLFUNCTIONS_H	code_1/include/CellFunctions.h	/^#define CELLFUNCTIONS_H$/;"	d
CellIni	code_1/src/CellFunctions.c	/^void CellIni(CellProps *Cells,$/;"	f
CellProps	code_1/include/ShellFunctions.h	/^}CellProps ;$/;"	t	typeref:struct:__anon1
Cells	code_1/include/Iterate.h	/^CellProps *Cells;                       \/\/ Struct for Cells$/;"	v
CollisionStep	code_1/src/Iterate.c	/^void CollisionStep(int CollisionModel){$/;"	f
CompDataConn	code_1/src/FilesReading.c	/^void CompDataConn(float** BCconn) \/\/ STILL NOT MODIFIED!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!$/;"	f
CompDataNode	code_1/src/FilesReading.c	/^void CompDataNode(float **Nodes)$/;"	f
ComputeResiduals	code_1/src/ComputeResiduals.c	/^void ComputeResiduals(CellProps *Cells, double* Residuals, double* sumVel0, double* sumVel1, double* sumRho0, double* sumRho1, int ComputeDragLift, int* iter, int* Iterations)$/;"	f
ComputeResiduals_H	code_1/include/ComputeResiduals.h	/^#define ComputeResiduals_H$/;"	d
CoordX	code_1/include/ShellFunctions.h	/^    MyReal CoordX;$/;"	m	struct:__anon1
CoordY	code_1/include/ShellFunctions.h	/^    MyReal CoordY;$/;"	m	struct:__anon1
CoordZ	code_1/include/ShellFunctions.h	/^    MyReal CoordZ;$/;"	m	struct:__anon1
Corner	code_1/include/ShellFunctions.h	/^    int    Corner;$/;"	m	struct:__anon1
CornerBC	code_1/src/BoundaryConditions.c	/^void CornerBC(CellProps *Cells, int i) {$/;"	f
Create1DArrayDouble	code_1/src/ShellFunctions.c	/^double *Create1DArrayDouble(int length)$/;"	f
Create1DArrayFloat	code_1/src/ShellFunctions.c	/^float *Create1DArrayFloat(int length)$/;"	f
Create1DArrayInt	code_1/src/ShellFunctions.c	/^int *Create1DArrayInt(int length)$/;"	f
Create2DArrayDouble	code_1/src/ShellFunctions.c	/^double **Create2DArrayDouble(int width, int height)$/;"	f
Create2DArrayFloat	code_1/src/ShellFunctions.c	/^float **Create2DArrayFloat(int width, int height)$/;"	f
Create2DArrayInt	code_1/src/ShellFunctions.c	/^int **Create2DArrayInt(int width, int height)$/;"	f
Create3DArrayBool	code_1/src/ShellFunctions.c	/^bool ***Create3DArrayBool(int width, int height, int depth)$/;"	f
Create3DArrayDouble	code_1/src/ShellFunctions.c	/^double ***Create3DArrayDouble(int width, int height, int depth)$/;"	f
Create3DArrayFloat	code_1/src/ShellFunctions.c	/^float ***Create3DArrayFloat(int width, int height, int depth)$/;"	f
Create3DArrayInt	code_1/src/ShellFunctions.c	/^int ***Create3DArrayInt(int width, int height, int depth)$/;"	f
CreateDirectory	code_1/src/ShellFunctions.c	/^void CreateDirectory(char* MainWorkDir)$/;"	f
CurvedWallBoundaries	code_1/src/BoundaryConditions.c	/^void CurvedWallBoundaries(CellProps *Cells, int j, int i, int* opp)$/;"	f
D3Q19Vars	code_1/src/CellFunctions.c	/^void D3Q19Vars()$/;"	f
Delta	code_1/include/ShellFunctions.h	/^shared  double *Delta;          \/\/ grid spacing$/;"	v
DragXF	code_1/include/ShellFunctions.h	/^    MyReal DragXF;$/;"	m	struct:__anon1
DragYF	code_1/include/ShellFunctions.h	/^    MyReal DragYF;$/;"	m	struct:__anon1
EdgeBC	code_1/src/BoundaryConditions.c	/^void EdgeBC(CellProps *Cells, int i)$/;"	f
F	code_1/include/ShellFunctions.h	/^    MyReal F[19];$/;"	m	struct:__anon1
FILESREADING_H	code_1/include/FilesReading.h	/^#define FILESREADING_H$/;"	d
FILESWRITING_H	code_1/include/FilesWriting.h	/^#define FILESWRITING_H$/;"	d
Feq	code_1/include/ShellFunctions.h	/^    MyReal Feq[19];$/;"	m	struct:__anon1
FinalOutputFile	code_1/include/Iterate.h	/^char FinalOutputFile[50];               \/\/ final data will be written to this file$/;"	v
Fluid	code_1/include/ShellFunctions.h	/^    int    Fluid;$/;"	m	struct:__anon1
Fneighbours	code_1/include/ShellFunctions.h	/^    MyReal Fneighbours[19];$/;"	m	struct:__anon1
HandleBoundariesStep	code_1/src/Iterate.c	/^void HandleBoundariesStep(int OutletProfile, int CurvedBoundaries){$/;"	f
ID	code_1/include/ShellFunctions.h	/^    int    ID;$/;"	m	struct:__anon1
ITERATE_H	code_1/include/Iterate.h	/^#define ITERATE_H$/;"	d
InletBC	code_1/src/BoundaryConditions.c	/^void InletBC(CellProps *Cells, int i)$/;"	f
IterOutputFile	code_1/include/Iterate.h	/^char IterOutputFile[50];                \/\/ write results to this file after the iterations$/;"	v
Iteration	code_1/src/Iterate.c	/^void Iteration(char* NodeDataFile, char* BCconnectorDataFile,$/;"	f
IterationOutputFile	code_1/include/Iterate.h	/^char IterationOutputFile[50];            \/\/ autosave filename$/;"	v
LAYER	code_1/include/BlockSizeDefiner.h	/^#define LAYER /;"	d
LAYERS_PER_THREAD	code_1/include/BlockSizeDefiner.h	/^#define LAYERS_PER_THREAD /;"	d
LiftF	code_1/include/ShellFunctions.h	/^    MyReal LiftF;$/;"	m	struct:__anon1
METAF	code_1/include/ShellFunctions.h	/^    MyReal METAF[19];$/;"	m	struct:__anon1
MRT	code_1/src/CellFunctions.c	/^void MRT(CellProps *Cells, int i, double** tm, double** stmiv)$/;"	f
MRTInitializer	code_1/src/CellFunctions.c	/^void MRTInitializer(double** tm, double** stmiv, double Omega)$/;"	f
MYTHREAD	code_1/include/ShellFunctions.h	/^#define MYTHREAD /;"	d
MaxInletCoordY	code_1/include/ShellFunctions.h	/^shared  double *MaxInletCoordY; \/\/ maximum inlet coordinate in y$/;"	v
MinInletCoordY	code_1/include/ShellFunctions.h	/^shared  double *MinInletCoordY; \/\/ minimum inlet coordinate in y$/;"	v
MyReal	code_1/include/ShellFunctions.h	/^typedef double MyReal;$/;"	t
NL	code_1/include/BlockSizeDefiner.h	/^#define NL /;"	d
NM	code_1/include/BlockSizeDefiner.h	/^#define NM /;"	d
NN	code_1/include/BlockSizeDefiner.h	/^#define NN /;"	d
NODES	code_1/include/BlockSizeDefiner.h	/^#define NODES /;"	d
Nodes	code_1/include/Iterate.h	/^float **Nodes;          \/\/ matrices for the nodes$/;"	v
NumConn	code_1/include/ShellFunctions.h	/^shared  int    *NumConn;        \/\/ This will store the number of lines of the read files$/;"	v
NumInletNodes	code_1/include/ShellFunctions.h	/^shared  int    *NumInletNodes;  \/\/ number of inlet nodes$/;"	v
NumNodes	code_1/include/ShellFunctions.h	/^shared  int    *NumNodes;       \/\/ This will store the number of lines of the read files$/;"	v
Omega	code_1/include/Iterate.h	/^double Omega;$/;"	v
OmegaA	code_1/include/Iterate.h	/^double OmegaA;          \/\/ collision frequency from the viscosity$/;"	v
OutletBoundaries	code_1/src/BoundaryConditions.c	/^void OutletBoundaries(CellProps *Cells, int j, int i)$/;"	f
OutputFile	code_1/include/Iterate.h	/^char OutputFile[50];                    \/\/ initial data will be written to this file$/;"	v
Q	code_1/include/ShellFunctions.h	/^    MyReal Q[19];$/;"	m	struct:__anon1
ReadBCconn	code_1/src/FilesReading.c	/^float **ReadBCconn(char* BCconnectorDataFile)$/;"	f
ReadIniData	code_1/src/FilesReading.c	/^void ReadIniData(char* IniFileName, float* Uavg, float* Vavg, float* Wavg, float* rho_ini,$/;"	f
ReadNodes	code_1/src/FilesReading.c	/^float **ReadNodes(char* NodeDataFile)$/;"	f
Residuals	code_1/include/Iterate.h	/^double *Residuals;$/;"	v
Rho	code_1/include/ShellFunctions.h	/^    MyReal Rho;$/;"	m	struct:__anon1
SAVE_ITERATION	code_1/include/Iterate.h	/^#define SAVE_ITERATION /;"	d
SAVE_ITERATION	code_1/include/Iterate.h	/^#define SAVE_ITERATION$/;"	d
SHELLFUNCTIONS_H	code_1/include/ShellFunctions.h	/^#define SHELLFUNCTIONS_H$/;"	d
StreamLattice	code_1/include/ShellFunctions.h	/^    int    StreamLattice[19];$/;"	m	struct:__anon1
StreamingStep	code_1/src/Iterate.c	/^void StreamingStep(){$/;"	f
StringAddition	code_1/src/ShellFunctions.c	/^void StringAddition(char* first, char* second, char* result)$/;"	f
THESIS_UPC_TESTS_H	code_1/src/tests.h	/^#define THESIS_UPC_TESTS_H$/;"	d
THREADS	code_1/include/ShellFunctions.h	/^#define THREADS /;"	d
TRT	code_1/src/CellFunctions.c	/^void TRT(CellProps *Cells, int i, double* w, int* cx, int* cy, int* opp, double Omega, double OmegaA)$/;"	f
ThreadNumber	code_1/include/ShellFunctions.h	/^    int    ThreadNumber;$/;"	m	struct:__anon1
TimeMeasurementFile	code_1/include/Iterate.h	/^FILE* TimeMeasurementFile;              \/\/ file for time measurement results$/;"	v
U	code_1/include/ShellFunctions.h	/^    MyReal U;$/;"	m	struct:__anon1
Uo	code_1/include/ShellFunctions.h	/^    MyReal Uo;$/;"	m	struct:__anon1
UpdateF	code_1/src/CellFunctions.c	/^void UpdateF(CellProps *Cells, int i)$/;"	f
UpdateMacroscopic	code_1/src/CellFunctions.c	/^void UpdateMacroscopic(CellProps *Cells, int i, int CalculateDragLift)$/;"	f
UpdateMacroscopicStep	code_1/src/Iterate.c	/^void UpdateMacroscopicStep(int CalculateDragLift){$/;"	f
V	code_1/include/ShellFunctions.h	/^    MyReal V;$/;"	m	struct:__anon1
Vo	code_1/include/ShellFunctions.h	/^    MyReal Vo;$/;"	m	struct:__anon1
W	code_1/include/ShellFunctions.h	/^    MyReal W;$/;"	m	struct:__anon1
WCells	code_1/include/ShellFunctions.h	/^shared_block(BLOCKSIZE)     CellProps  *WCells; \/\/ Writing Cells: cells to write data$/;"	v
WCells2	code_1/include/ShellFunctions.h	/^shared_block(BLOCKSIZE + 2*LAYER)     CellProps  *WCells2; \/\/ Writing Cells: cells to write data$/;"	v
WallBC	code_1/src/BoundaryConditions.c	/^void WallBC(CellProps *Cells, int i, int* opp)$/;"	f
Wo	code_1/include/ShellFunctions.h	/^    MyReal Wo;$/;"	m	struct:__anon1
WriteBCells	code_1/src/FilesWriting.c	/^void WriteBCells(char* OutputFile, int* postproc_prog)$/;"	f
WriteResults	code_1/src/FilesWriting.c	/^void WriteResults(char* OutputFile, int* postproc_prog)$/;"	f
WriteResults2	code_1/src/FilesWriting.c	/^void WriteResults2(char* OutputFile)$/;"	f
alloc_cells	code_1/src/Iterate.c	/^void alloc_cells() {\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/$/;"	f
allocate_lattice_vars	code_1/src/Iterate.c	/^void allocate_lattice_vars() {\/\/ D2Q9 Variables of the lattice$/;"	f
allocate_residuals	code_1/src/Iterate.c	/^void allocate_residuals() {\/\/ allocate residuals$/;"	f
allocate_shared	code_1/src/Iterate.c	/^void allocate_shared() {\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/$/;"	f
allocate_vars	code_1/src/Iterate.c	/^void allocate_vars() {\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/$/;"	f
auto_save	code_1/src/Iterate.c	/^void auto_save(int AutosaveAfter, int AutosaveEvery, int postproc_prog) {$/;"	f
c	code_1/include/CellFunctions.h	/^int*    c;              \/\/ shift of lattice directions written in vector form$/;"	v
calc_collision_freq	code_1/src/Iterate.c	/^void calc_collision_freq(float Viscosity) {\/\/ Calculate collision frequency$/;"	f
cell_from_id	code_1/src/Iterate.c	/^CellProps* cell_from_id(CellProps* Cells, int ID){$/;"	f
cx	code_1/include/CellFunctions.h	/^int*   cx;              \/\/ x coordinate of the discrete lattice directions$/;"	v
cy	code_1/include/CellFunctions.h	/^int*   cy;              \/\/ y coordinate of the discrete lattice directions$/;"	v
cz	code_1/include/CellFunctions.h	/^int*   cz;              \/\/ z coordinate of the discrete lattice directions$/;"	v
end_measure_time	code_1/include/Iterate.h	/^#define end_measure_time(/;"	d
end_tests	code_1/src/tests.c	/^void end_tests() {$/;"	f
export_data	code_1/src/Iterate.c	/^void export_data(int postproc_prog) {$/;"	f
fnMemCopyRes	code_1/include/Iterate.h	/^char fnMemCopyRes[50];$/;"	v
free_mesh_data_matrices	code_1/src/Iterate.c	/^void free_mesh_data_matrices() {$/;"	f
free_vars	code_1/src/Iterate.c	/^void free_vars() {$/;"	f
func_between_time	code_1/include/Iterate.h	/^#define func_between_time(/;"	d
generalWall	code_1/src/BoundaryConditions.c	/^void generalWall(CellProps* Cells, int i) {$/;"	f
getIndex	code_1/src/CellFunctions.c	/^int getIndex(const int x, const int y, const int z) {$/;"	f
getSharedToCells	code_1/src/Iterate.c	/^void getSharedToCells(){$/;"	f
getTan	code_1/src/BoundaryConditions.c	/^void getTan(const int* c, const int* n, int* t) {$/;"	f
getThread	code_1/src/CellFunctions.c	/^int getThread(int index) {$/;"	f
getWall	code_1/src/BoundaryConditions.c	/^void getWall(CellProps *Cells, int i, int wall_ID, double* v) {$/;"	f
i	code_1/include/Iterate.h	/^int i, j, k, iter;                      \/\/ variables for loops$/;"	v
init_measure_time	code_1/include/Iterate.h	/^#define init_measure_time /;"	d
init_tests	code_1/src/tests.c	/^void init_tests() {$/;"	f
init_vars	code_1/src/Iterate.c	/^void init_vars(int *postproc_prog) {$/;"	f
iter	code_1/include/Iterate.h	/^int i, j, k, iter;                      \/\/ variables for loops$/;"	v
iter_counter	code_1/include/Iterate.h	/^int iter_counter;$/;"	v
j	code_1/include/Iterate.h	/^int i, j, k, iter;                      \/\/ variables for loops$/;"	v
j_wall_unknown	code_1/include/CellFunctions.h	/^int** j_wall_unknown;$/;"	v
k	code_1/include/Iterate.h	/^int i, j, k, iter;                      \/\/ variables for loops$/;"	v
logFile	code_1/include/Iterate.h	/^char logFile[50];                       \/\/ path of the .log file$/;"	v
log_file	code_1/include/Iterate.h	/^FILE* log_file;                         \/\/ file for log$/;"	v
loop	code_1/include/ShellFunctions.h	/^shared int loop;$/;"	v
main	code_1/src/main.c	/^int main(int argc, char* argv[])$/;"	f
main_thread	code_1/include/ShellFunctions.h	/^#define main_thread /;"	d
main_while_loop	code_1/src/Iterate.c	/^void main_while_loop(int CollisionModel, int CurvedBoundaries, int OutletProfile, int *Iterations, int AutosaveAfter,$/;"	f
max	code_1/include/ShellFunctions.h	/^#define max(/;"	d
min	code_1/include/ShellFunctions.h	/^#define min(/;"	d
multVec	code_1/include/BoundaryConditions.h	/^#define multVec(/;"	d
norm	code_1/include/CellFunctions.h	/^int** norm;$/;"	v
opp	code_1/include/CellFunctions.h	/^int*  opp;              \/\/ opposite vector$/;"	v
ppp	code_1/include/Iterate.h	/^int* ppp;                               \/\/ pointer of the postproc_prog variable$/;"	v
print_boundary_type	code_1/src/Iterate.c	/^void print_boundary_type(CellProps* Cells) {$/;"	f
print_cell_line	code_1/src/Iterate.c	/^void print_cell_line(FILE* file, const CellProps* Cell) {$/;"	f
print_cells_info	code_1/src/Iterate.c	/^void print_cells_info(CellProps* Cells) {$/;"	f
print_init_info_to_log	code_1/src/Iterate.c	/^void print_init_info_to_log(float Uavg, float Vavg, float Wavg, float rho_ini, float Viscosity, int InletProfile,$/;"	f
putCellsToShared	code_1/src/Iterate.c	/^void putCellsToShared(){$/;"	f
putCellsToWCells	code_1/src/Iterate.c	/^void putCellsToWCells(){$/;"	f
putCellsToWCells2	code_1/src/Iterate.c	/^void putCellsToWCells2(){$/;"	f
read_data	code_1/src/Iterate.c	/^void read_data(const char *NodeDataFile, const char *BCconnectorDataFile) {\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/$/;"	f
resid_file	code_1/include/Iterate.h	/^FILE* resid_file;                       \/\/ file for residuals$/;"	v
sResiduals	code_1/include/ShellFunctions.h	/^shared_block(5)              double sResiduals[5*THREADS]; \/\/ variable to store residuals$/;"	v
save_init_data	code_1/src/Iterate.c	/^void save_init_data(int postproc_prog) {\/\/ Write Initialized data$/;"	f
save_iteration	code_1/src/Iterate.c	/^void save_iteration(int postproc_prog) {$/;"	f
shared	code_1/include/ShellFunctions.h	/^#define shared$/;"	d
shared_block	code_1/include/ShellFunctions.h	/^#define shared_block(/;"	d
stmiv	code_1/include/Iterate.h	/^double **stmiv;         \/\/ variable for the MRT collision model$/;"	v
sumRho0	code_1/include/Iterate.h	/^double *sumRho0;$/;"	v
sumRho1	code_1/include/Iterate.h	/^double *sumRho1;$/;"	v
sumVel0	code_1/include/Iterate.h	/^double *sumVel0;$/;"	v
sumVel1	code_1/include/Iterate.h	/^double *sumVel1;$/;"	v
tBCells	code_1/include/Iterate.h	/^float tBCells;                  \/\/ Time measurement of handling boundaries$/;"	v
tBoundaries	code_1/include/Iterate.h	/^float tBoundaries;              \/\/ Time measurement of Boundaries$/;"	v
tCellsInitialization	code_1/include/Iterate.h	/^float tCellsInitialization;     \/\/ Time measurement of Initialization$/;"	v
tCollision	code_1/include/Iterate.h	/^float tCollision;               \/\/ Time measurement of Collision$/;"	v
tInitialization	code_1/include/Iterate.h	/^float tInitialization;          \/\/ Time measurement of Initialization$/;"	v
tInstant1	code_1/include/Iterate.h	/^clock_t tInstant1, tInstant2;   \/\/ Time measurement points: universal$/;"	v
tInstant2	code_1/include/Iterate.h	/^clock_t tInstant1, tInstant2;   \/\/ Time measurement points: universal$/;"	v
tIterEnd	code_1/include/Iterate.h	/^clock_t tIterStart, tIterEnd;   \/\/ Time measurement points: main loop$/;"	v
tIterStart	code_1/include/Iterate.h	/^clock_t tIterStart, tIterEnd;   \/\/ Time measurement points: main loop$/;"	v
tIteration	code_1/include/Iterate.h	/^float tIteration;               \/\/ Time measurement of Iteration$/;"	v
tResiduals	code_1/include/Iterate.h	/^float tResiduals;               \/\/ Time measurement of calculating residuals$/;"	v
tStart	code_1/include/Iterate.h	/^clock_t tStart;     \/\/ Time measurement: declaration, begin$/;"	v
tStreaming	code_1/include/Iterate.h	/^float tStreaming;               \/\/ Time measurement of Streaming$/;"	v
tUpdateF	code_1/include/Iterate.h	/^float tUpdateF;                 \/\/ Time measurement of UpdateF$/;"	v
tUpdateMacro	code_1/include/Iterate.h	/^float tUpdateMacro;             \/\/ Time measurement of Update Macroscopic vars$/;"	v
tWriting	code_1/include/Iterate.h	/^float tWriting;                 \/\/ Time measurement of writing data$/;"	v
tang	code_1/include/BoundaryConditions.h	/^int tang[3];$/;"	v
test_all	code_1/src/tests.c	/^void test_all(CellProps* Cells,int iter) {$/;"	f
test_boundaries	code_1/src/tests.c	/^void test_boundaries(CellProps* Cells,int iter) {$/;"	f
test_collision	code_1/src/tests.c	/^void test_collision(CellProps* Cells,int iter) {$/;"	f
test_stream	code_1/src/tests.c	/^void test_stream(int ID,CellProps* Cells,int iter) {$/;"	f
testingFileName	code_1/include/Iterate.h	/^char testingFileName[50];$/;"	v
testing_file	code_1/include/Iterate.h	/^FILE* testing_file;              \/\/ file for time measurement results$/;"	v
tests_file	code_1/src/tests.h	/^FILE* tests_file;$/;"	v
tests_file_name	code_1/src/tests.h	/^char tests_file_name [50];$/;"	v
time_meas_vars_init	code_1/src/Iterate.c	/^void time_meas_vars_init() {\/\/ Time measurement variables$/;"	f
tm	code_1/include/Iterate.h	/^double **tm;            \/\/ variable for the MRT collision model$/;"	v
upc_barrier	code_1/include/ShellFunctions.h	/^#define upc_barrier$/;"	d
upc_forall	code_1/include/ShellFunctions.h	/^#define upc_forall(/;"	d
w	code_1/include/CellFunctions.h	/^double* w;              \/\/ weight values for the directions$/;"	v
write_cells_to_results	code_1/src/Iterate.c	/^void write_cells_to_results(int postproc_prog) {$/;"	f
